<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALDAAACwwBP0AiyAAACNZJREFUWEfFl3lQ1EcW
        x5vSlFl3q7JJ3CRr1iWuIsohBFAOUVC8EBBYNaLiiRfGA4ZThktFUEEuHUUZh1NUBMFjPTfeZ2lWBVQO
        FZgZhuFSRI1y+d3XP8FCf6Z2/0qm6lPdv9fd733f667qHgbgd+Wjxt+Sjxp/S951Ojs6RLx584ZptVrL
        eyUlOx9WVMirq6tTNWp1aq1Gk6qtrU3VarugPrepaayqsjK1orxcXlJcnFJXV2fb1tbGXr9+LUIkgByI
        IMc6FPjC40ePoFapQN+oq9Oiob4eDQ0NaCR4y6mvr0OdVgtaB2V1NR49fIiy0tIbSqWyF8E+RCTgwYMH
        AqXv0+v+vXsPysvKQJlBpVSipkaN2lqNIKS+joJSW6ethaa2BjVqNZTKalQ+fowH9++juKjoEVWiD8G6
        KS4uEhAJqKqsEqisrCQeM8qa06u8vLyYB+cV4NnxoA0N9WhspAr0gNt4BTSaGqhUSvCqUUJlJL4PwSoq
        yhlVkz2qeMioOmIBra/aWHtbB9OU17KKuxVMXaNiVMpelE0xz5w75tn2DNrU2CjQUwSdCaFKfBsoYBkJ
        6VNVXcnK/lPKlCUqitHO2l63iQV0tHbSoQPT3New2wW3WcnlElZXr6X9qy4W9p8cd2cuBG7qQU8RdD74
        FnHRVLkytUbV5+6Fu+zn/J9Z9W3ae4rR2d4pFtDeSie/8w2rLa1lRceK2KGYo+zy6RuMAtxtampCS8sz
        vHjxXODlixd4+ZLgbY8+H3tONDc3C6JI8IPzJ66wvOjD7M7hO0x1V8XeUIwOqrRYQJdRVaTWvZZ1ZUtO
        xMHcxe4/5q5eubw50F8CaXAQIkKlWB8ZgeioDdgSE4P42FiBLTHRiN6wXhiLCJMihOYG+klAa1sWunkf
        zArbn3st43Jc5a2qQTxGZ8evVKCl4Xn/c6n/fnQ66SgUIWlwtHbFCPPhsLUaCXvbURhvb4fJ4x3g7DgJ
        bi5OmO7mKsD73DZ5goMwx97WRlgz0twEk6ycsTtIjjPJx3B29xlls/aZbusvrWIB1/NusfOKSz8WRBXg
        6Kbj2LVqLyYYuWKoni7MhhvCeoQZ7EZZY8JYezhNmgg3ZydMc5sqwPvcNmGcvTCHzzUfboShQ3QxzsAJ
        O1Zkkc8TKNxYiNOynyQURyzgUNQRlr/+SEhueCEObTiKnSszMcG4S4CxIawsvsdoGys42I3GJIdxQkAX
        x8kCvM9tfGy0tRWszL8X1ggCjJyw3Ttd8JkbUYgDYYfC9kvzxQLySMCByMLgnLX5OEAiti1Ph4ORCwb/
        41uYGAyFhelw2Iw0xxgSMW6MLVXCDhMdxgrwPrfxMQtjc5gOGw6DQcOg278/7A0dkbRUAZ7Y3pA8jpQQ
        C8gJL2TZofnBGQG52C89gh3e2XA3WwT9gQOhr/d3GBvowczUAJYWJrCxNKNqjMAY25ECvG9NNssRJliz
        0RzrMg0RmWkAz1WGmGLkiXgvObLX5iEjMJcjJcQCMkPyWXrQwWCF7wFEzN4EP/dQrJm0HjNGLIWj6XQ4
        mf0AFwsPuI6cDVfLOXCz9IS71Vt438XME7Om/IA9d4ZCXvwF9tz7HCkXLODrEomUlXuxR7IPcl8BKSEW
        oAjKZRmB+cEBMyIxUzIAizb3w6Kpi5DklYm4hXsIOeIWvCX2Y8xNQ7xPAmTXhyHp+ldIutEPsnMjsNMn
        nQTk0JnKIrI5UkIsYJckh8l9DgavdPXDrHg9LMwZBE/3mdjpvQ8yOsViMiHzpnZpzlu8DkDmvxNJV40Q
        d7U/4q59g+SzNnQAM5DslYPkxdlEFpKXZUiTl6WLBchWZbFtKzKDYxfsxgoPX3h5LEfU3GQkeFFmXnvE
        LFJQK0eCXwIS/OOR4JuExMiN2HrZFDGXBxB/Q8JZWyQGb6U5iV1zEhE/P0Ma7/mRCiStyGAJS9KCt8xN
        Rdy8NGydl47Y+XJsnrcbW6gVMSsTMUnzEHNtGDZdMhHYfMkUGy8OxYbzgwSiLxqQ3fTdeMxFE2xMc5FG
        yzzEAuKWKNiWhfLgKI+diJr1lo2zd2H9jB0IdN6EAKeYd/g7RcNvQiykqQ4Iv/Idws7qIewcQW342SGE
        fhdD3h+jNvzSQGn45e/EAqLn7mZRs1PWRkzbjojp2xE5QwapWyJWefhjR6IMaSlpyJJnYa9iL/al5+Bg
        RgE2FLhgzYkBkBwfLOB3Qg+BJ4cRBm85RZwZSuh3MQT+ZwaH+p8eJBYQtyyNRc3dFRTsnIgQ1ySEucmw
        yF6CrOw0qNRK4YptbGqgm+4p3XgtaG/txNmyTIScGI3wUw6IOD0eoSftsfqIEWGI1UeNsKrQACuzzeGT
        Y01YYnWmFYLCF4eGrvUVC2hUtbCSK48tA6bEQzIxFoGOiZhtswIFBXnCE4s/MDQ1NcKLqPvub37yDPUN
        9CSrJ3F0/d6vvonleaZYkmuI5QXGmL1bD3PGLkGQUwIkjpto6+Jw/VCp3eMbDWIBJ0+cYsVFJeynnJue
        62bK722el90kmba+6dixwx3VVVXCM4tX4cNHydMnTwWeP32BMmURPDNN4ZFuiDnZxvjnNv1O3xnhTbGe
        +5rWzdhT+q9dV7xuXLnFCvOOiAXwX99PP2WjrUYzdweP3svmr/zSx9v361s3b5bzCnS/irqz58Gf0EOl
        m5bmFtyrvI2pO0zgJDOE8w5DuG0z0yxfukzXe8HqL9zGzvzExsKG9e3zqRBLJKCXYGa9ib7EH7s5efz4
        1Wf0wml59gyvXv2CtvZWtLe3oaOjHfTf4R38p21WwzllFOwSjeEgM8W4aDM102FfkZ8/dPnjvnvzWN1x
        ewrQIT4jBhOmxEgdYpi+vofvmjUpEh8fhb9Eogjw91MEBvgrgvwDFEEBAWld8L4iODBQYe1uoehv10+h
        O/6vim+Nv/btraNjyX11+eS+eQydjwngfEL8ifgz0Y/4hsz9iM+Iz4kvu77/0gXPjtP9zcf4HD5XWMN9
        dPniPrlvHuNd3A8F/C94lf4fPrb2PUQCfh/A/gvX6Or4tTDOagAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <metadata name="printDocument1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>220, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoAAACJAAAAqQAAAKwAAACtAQUEfjDAkHAzzJmQM8yZrzPM
        magzzJmnM8yZmTPMmRIAAAAAAAAAAAAAAAAAAAAhAAAAeAAAAHkAAAB9ABALghU8L384yJh5L8uXey/L
        l3gzzJlvM8yZbzPMmWczzJkLAAAAAAAAAAAAAAAAAAAAAQAAAAMcmm8PiNu/Z7rr27/L7OHiyu7i47ru
        3cCK4sRnJ8iSDyfJkwIzzJkCAAAAAAAAAAAAAAAAAAAAAAAAAAA5zpoNpenSluf58/n5+fn/5uXl//X0
        9P/9/f3/5/nz+qXo0pc4y5gNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkOPHbOr69Pv/////4+ro/+fo
        6P/o6Oj/6O/t///////q+vT7kOPIbAAAAAAAAAAAAAAAAAAAAAAAAAAAM8qVEMPw4cj4/fv/ue7d/8Pk
        2f/W1dX/0tLS/7/g1f+67t3/9/37/8Pw4cgzypUQAAAAAAAAAAAAAAAAAAAAAF3Xriav69foiuLE/2LZ
        sf/A3tT/xsTF/8zKy/+82tD/Ytmx/4rixP+v69foXdeuJgAAAAAAAAAAAAAAAAAAAAA9z55LaNmz8mna
        tP9Z163/mNC9/9bT1P/e29z/kcm2/1rXrf9p2rT/aNmz8j3PnksAAAAAAAAAADPMmQgzzJlMMsyZnVzW
        reiA38D/keTJ/8zj2//Z2Nj/3t3d/8jf1/+R5Mn/gN+//1zWregyzJmdM8yZTDPMmQgzzJlAM8yZTS7L
        ly923bty3vfu+v/////5+Pn/4uLi/+bm5v/39fb//////9737vp23btzLsuXLzPMmU0zzJlAM8yZCgAA
        AAAAAAAAPsyaC6Po0ZDl+fL2/f/+/////////////f/+/+X58vaj6NGQPsybCwAAAAAAAAAAM8yZCgAA
        AAAAAAAAAAAAAAAAAAAaxYoLiOHEa7nu3NDP8+f5z/Pn+bnu3NCI4cRrGsWKCwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AAD//wAAwAEAAMABAADAAwAA4AcAAOAHAADAAwAAwAMAAMADAAAAAAAAAAAAAGAG
        AADwDwAA//8AAA==
</value>
  </data>
</root>